services:
  bot-service:
    container_name: bot-service
    build:
      context: .
      dockerfile: Dockerfile
    restart: unless-stopped
    volumes:
      - logs:/usr/app/logs
      - data:/usr/app/data
      - db:/usr/app/db
    entrypoint: ["python", "bot.py"]

  bot-parser-service:
    container_name: bot-parser-service
    build:
      context: .
      dockerfile: Dockerfile
    restart: unless-stopped
    volumes:
      - logs:/usr/app/logs
      - data:/usr/app/data
      - db:/usr/app/db
      # - ./.scheduler.env:/usr/app/.env
    entrypoint: ["python", "parser.py"]

  api-service:
    container_name: api-service
    build:
      context: .
      dockerfile: Dockerfile
    restart: unless-stopped
    ports:
      - "8000:8000"
    volumes:
      - logs:/usr/app/logs
      - data:/usr/app/data
      - db:/usr/app/db
      - ../th042025-client/cert.pem:/usr/app/cert.pem
      - ../th042025-client/key.pem:/usr/app/key.pem
    entrypoint: ["uvicorn", "api:app", "--host", "0.0.0.0", "--port", "8000", "--ssl-certfile", "/usr/app/cert.pem", "--ssl-keyfile", "/usr/app/key.pem"]

  web-service:
    container_name: web-service
    build:
      context: ../th042025-client
      dockerfile: Dockerfile
    restart: unless-stopped
    ports:
      - "443:443"
    volumes:
      - ../th042025-client/dist/th042025-client/browser:/usr/share/nginx/html

volumes:
  logs:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./logs
  data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./data
  db:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./db
